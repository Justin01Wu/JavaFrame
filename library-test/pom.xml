<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.justa</groupId>
	<artifactId>library-test</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>library-test</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.microsoft.ews-java-api</groupId>
			<artifactId>ews-java-api</artifactId>
			<version>2.0</version>
			<scope>compile</scope>
		</dependency>
		
		<dependency>
  			<groupId>io.jsonwebtoken</groupId>
  			<artifactId>jjwt</artifactId>
  			<version>0.9.1</version>
		</dependency>
		
		<dependency>
    		<groupId>com.auth0</groupId>
    		<artifactId>java-jwt</artifactId>
    		<version>3.9.0</version>
		</dependency>
		
		<dependency>
    		<groupId>com.auth0</groupId>
    		<artifactId>jwks-rsa</artifactId>
    		<version>0.9.0</version>
		</dependency>
		
		
		<dependency>
		  <groupId>org.apache.kafka</groupId>
		  <artifactId>kafka-clients</artifactId>
		  <version>2.0.0</version>
		</dependency>
		
		<dependency>
  			<groupId>org.glassfish.jersey.media</groupId>
  			
  			<artifactId>jersey-media-json-jackson1</artifactId>
  			<!--  to avoid conflict with jjwt and java-jwt, we use version 1-->
  			
  			<scope>compile</scope>
			<version>2.27</version>
		</dependency>
		
		<dependency>
  			<groupId>org.apache.avro</groupId>
  			<artifactId>avro</artifactId>
  			<version>1.8.2</version>
		</dependency>		
		
		<!-- Java API for JSON Processing (API) -->
		<dependency>
		    <groupId>javax.json</groupId>
		    <artifactId>javax.json-api</artifactId>
		    <version>1.1.2</version>
		</dependency>
		
		<!-- Java API for JSON Processing (implementation) -->
		<dependency>
		    <groupId>org.glassfish</groupId>
		    <artifactId>javax.json</artifactId>
		    <version>1.1.2</version>
		</dependency>		
		
	</dependencies>
	
	<build>
		<plugins>

		    <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<debug>true</debug>
					<compilerVersion>1.8</compilerVersion>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<!-- copy all 3rd libraries to a folder "jars" under target  -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
            			<id>copy-dependencies</id>
            			<phase>package</phase>
            			<goals>
              				<goal>copy-dependencies</goal>
            			</goals>				
						<configuration>
                            <includes>**/*.jar</includes>
                            <outputDirectory>${project.build.directory}/jars</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>							
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- exclude integration testing from normal unit test -->
			<!-- comes from http://cupofjava.de/blog/2013/02/05/integration-tests-with-maven-and-tomcat/ -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<excludedGroups>com.justa.library.IntegrationTest, com.justa.library.ManualTest</excludedGroups>
					<parallel>classes</parallel>
					<threadCount>4</threadCount>
				</configuration>
			</plugin>			
			
		</plugins>
		<finalName>${project.artifactId}</finalName>
	</build>
		
</project>
