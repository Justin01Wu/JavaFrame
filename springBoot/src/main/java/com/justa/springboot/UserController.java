package com.justa.springboot;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.justa.springboot.db.User;
import com.justa.springboot.db.UserManager;
import com.justa.springboot.db.UserRepository;

// it comes from https://spring.io/guides/gs/accessing-data-mysql/

@Controller // This means that this class is a Controller
@RequestMapping(path = "/api/users") // This means URL's start with /users (after Application path)
public class UserController {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	
	@Autowired
	private UserManager userManager;

	@PostMapping(path = "/add") // Map ONLY POST Requests
	public @ResponseBody String addNewUser(@RequestBody User user) {
// @ResponseBody means the returned String is the response, not a view name

		userManager.saveUser(user);
		return "Saved";
	}

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<User> getAllUsers() {
			// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}
