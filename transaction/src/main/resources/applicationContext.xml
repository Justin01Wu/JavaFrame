<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
	http://www.springframework.org/schema/task 
	http://www.springframework.org/schema/task/spring-task-3.2.xsd">

	<context:property-placeholder location="classpath:jdbc.properties" />    

	<bean id="programService" class="ca.justa.transaction.service.ProgramService">
		<property name="dataSource" ref="dataSource" />
	</bean>	

<!--  
	DriverManagerDataSource is not an actual connection pool; it does not actually pool Connections. 
	It just serves as simple replacement for a full-blown connection pool, implementing the same standard interface, but creating new Connections on every call.

	Useful for test or standalone environments outside of a J2EE container, 
	either as a DataSource bean in a corresponding ApplicationContext or in conjunction with a simple JNDI environment. 
	Pool-assuming Connection.close() calls will simply close the Connection, so any DataSource-aware persistence code should work.
	
	
	please see here for details of this class
	http://docs.spring.io/spring-framework/docs/2.5.6/api/org/springframework/jdbc/datasource/DriverManagerDataSource.html
	
	please see here for how to use a real connection pool:	
	http://stackoverflow.com/questions/5117191/spring-jdbc-connection-pool-best-practices
 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    	<property name="driverClassName" value="${jdbc.driverClassName}" />
    	<property name="url" value="${jdbc.url}" />
    	<property name="username" value="${jdbc.username}" />
    	<property name="password" value="${jdbc.password}" />
	</bean>
</beans>